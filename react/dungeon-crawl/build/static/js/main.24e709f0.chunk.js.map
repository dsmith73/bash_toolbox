{"version":3,"sources":["features/player/player_walk.png","features/player/reducer.js","features/map/reducer.js","config/store.js","features/player/index.js","features/player/movement.js","config/constants.js","features/map/index.js","data/map/1/index.js","features/world/index.js","App.js","index.js"],"names":["module","exports","initialState","position","spriteLocation","direction","walkIndex","playerReducer","state","action","type","payload","tiles","mapReducer","rootReducer","combineReducers","player","map","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","connect","getSpriteLocation","SPRITE_SIZE","dispatchMove","newPos","getState","getWalkIndex","dispatch","attemptMove","oldPos","getNewPosition","MAP_WIDTH","MAP_HEIGHT","observeBoudaries","y","x","observeImpassable","addEventListener","e","preventDefault","keyCode","console","log","handleKeyDown","handleMovement","props","style","top","left","backgroundImage","walkSprite","backgroundPosition","width","height","getTileSprite","MapTile","className","tile","MapRow","margin","border","row","World","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24e709f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/player_walk.9f19440f.png\";","const initialState = {\r\n    position: [0, 0],   // x / y\r\n    spriteLocation: '0px 0px',  // adding comma btn x & y will add center, center   \r\n    direction: 'SOUTH',\r\n    walkIndex: 0,\r\n}\r\n\r\nconst playerReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case 'MOVE_PLAYER':\r\n            return {\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default playerReducer\r\n","const initialState = {\r\n    tiles: [],   // x / y\r\n}\r\n\r\nconst mapReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_TILES':\r\n            return {\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default mapReducer\r\n","import { createStore, combineReducers } from 'redux'\r\nimport playerReducer from '../features/player/reducer'\r\nimport mapReducer from '../features/map/reducer'\r\n\r\n// js object that stores keys \r\nconst rootReducer = combineReducers({\r\n    player: playerReducer,\r\n    map: mapReducer,\r\n})\r\n\r\n\r\nconst store = createStore (\r\n    // github.com/zalmoxisus/redux-devtools-extension  \r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()  \r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n)\r\n\r\n\r\n\r\n\r\nexport default store","import React from 'react'\r\nimport walkSprite from './player_walk.png'\r\nimport { connect } from 'react-redux'\r\nimport handleMovement from './movement'\r\n\r\nfunction Player(props) {\r\n    return (\r\n        <div\r\n            style={{    //position character on screen  \r\n                position: 'absolute',\r\n                top: props.position[1],\r\n                left: props.position[0],\r\n                backgroundImage: `url('${walkSprite}')`,\r\n                backgroundPosition: props.spriteLocation,  // sprite map position  \r\n                width: '40px',\r\n                height: '40px',\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        ...state.player,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(handleMovement(Player))","import store from '../../config/store'\r\nimport { SPRITE_SIZE, MAP_WIDTH, MAP_HEIGHT } from '../../config/constants'\r\n\r\n\r\nexport default function handleMovement(player) {\r\n\r\n\r\n    function getNewPosition(oldPos, direction) {\r\n        switch(direction) {\r\n            case 'WEST':\r\n                return [ oldPos[0] - SPRITE_SIZE, oldPos[1] ]\r\n            case 'EAST':\r\n                return [ oldPos[0] + SPRITE_SIZE, oldPos[1] ]\r\n            case 'NORTH':\r\n                return [ oldPos[0], oldPos[1] - SPRITE_SIZE ]\r\n            case 'SOUTH':\r\n                return [ oldPos[0], oldPos[1] + SPRITE_SIZE ]\r\n            default:\r\n                return [ oldPos[0], oldPos[1] ]\r\n        }\r\n        \r\n    }\r\n\r\n    function getSpriteLocation(direction, walkIndex) {\r\n        switch(direction) {\r\n            case 'SOUTH':\r\n                return `${SPRITE_SIZE * walkIndex}px ${SPRITE_SIZE * 0}px`\r\n            case 'EAST':\r\n                return `${SPRITE_SIZE * walkIndex}px ${SPRITE_SIZE * 1}px`\r\n            case 'WEST':\r\n                return `${SPRITE_SIZE * walkIndex}px ${SPRITE_SIZE * 2}px`   // adding comma btn x & y will add center, center  \r\n            case 'NORTH':\r\n                return `${SPRITE_SIZE * walkIndex}px ${SPRITE_SIZE * 3}px`\r\n        }\r\n    }\r\n\r\n    function getWalkIndex() {\r\n        const walkIndex = store.getState().player.walkIndex\r\n        return walkIndex >= 7 ? 0 : walkIndex + 1\r\n    }\r\n\r\n    function observeBoudaries(oldPos, newPos) {\r\n        return (newPos[0] >= 0 && newPos[0] <= MAP_WIDTH - SPRITE_SIZE) && \r\n                (newPos[1] >= 0 && newPos[1] <= MAP_HEIGHT - SPRITE_SIZE)\r\n    }\r\n\r\n    function observeImpassable(oldPos, newPos) {\r\n        const tiles = store.getState().map.tiles\r\n        const y = newPos[1] / SPRITE_SIZE\r\n        const x = newPos[0] / SPRITE_SIZE\r\n        const nextTile = tiles[y][x]\r\n        return nextTile < 5     // can walk through tiles with # < 5  \r\n    }\r\n\r\n    function dispatchMove(direction, newPos) {\r\n        const walkIndex = getWalkIndex()\r\n        store.dispatch({\r\n            type: 'MOVE_PLAYER',\r\n            payload: {\r\n                position: newPos,\r\n                direction,\r\n                walkIndex,\r\n                spriteLocation: getSpriteLocation(direction, walkIndex),\r\n            }\r\n        })\r\n    }\r\n\r\n    function attemptMove(direction) {\r\n        const oldPos = store.getState().player.position\r\n        const newPos = getNewPosition(oldPos, direction)\r\n\r\n        if (observeBoudaries(oldPos, newPos) && observeImpassable(oldPos, newPos)) \r\n        dispatchMove(direction, newPos)\r\n\r\n    }\r\n\r\n    function handleKeyDown(e) {\r\n        e.preventDefault()  // prevent screen from scrolling with arrow keys  \r\n\r\n        switch(e.keyCode) {\r\n            case 37:\r\n                return attemptMove('WEST')\r\n\r\n            case 38:\r\n                return attemptMove('NORTH')\r\n\r\n            case 39:\r\n                return attemptMove('EAST')\r\n\r\n            case 40:\r\n                return attemptMove('SOUTH')\r\n                                        \r\n            default:\r\n                console.log(e.keyCode)\r\n        }\r\n    }\r\n\r\n    window.addEventListener('keydown', (e) => {\r\n        handleKeyDown(e)\r\n    })\r\n    return player\r\n}","export const SPRITE_SIZE = 40\r\nexport const MAP_HEIGHT = SPRITE_SIZE * 12\r\nexport const MAP_WIDTH = SPRITE_SIZE * 20\r\n\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { SPRITE_SIZE } from '../../config/constants'\r\nimport './styles.css'\r\n\r\nfunction getTileSprite(type) {\r\n    switch(type) {\r\n        // Walk Tiles  0 - 3  \r\n        case 0:\r\n            return 'grass'\r\n        case 1:\r\n            return 'tree'\r\n        // Loot Tile - 4  \r\n        case 4:\r\n            return 'chest'\r\n        // Impass Tiles 5 - 19  \r\n        case 5:\r\n            return 'rock'\r\n        case 6:\r\n            return 'tree'\r\n        case 7:\r\n            return 'player'\r\n        case 10:\r\n            return 'hole'\r\n        // MOB Tiles 20 - 99  \r\n        case 20:\r\n            return 'goblin'\r\n        case 30:\r\n            return 'wolf'\r\n        case 40:\r\n            return 'spider'\r\n        case 50:\r\n            return 'redDragon'\r\n\r\n        default:\r\n            return 'grass'\r\n    }\r\n}\r\n\r\nfunction MapTile(props) {\r\n    return <div \r\n        className={`tile ${getTileSprite(props.tile)}`}\r\n        style={{\r\n            height: SPRITE_SIZE,\r\n            width: SPRITE_SIZE,\r\n        }}\r\n    />\r\n        \r\n}\r\n\r\nfunction MapRow(props) {\r\n    return <div className=\"row\">\r\n        {\r\n            props.tiles.map( tile => <MapTile tile={tile} /> )\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nfunction Map(props) {\r\n    return (\r\n        <div\r\n            style={{\r\n                position: 'relative',\r\n                margin: '0',\r\n                top: '0',\r\n                left: '0',\r\n                width: '800px',\r\n                height: '480px',\r\n                // paddingTop: '4px',  // needed to add 4px pad to top after changing margin in css  \r\n                border: '4px solid white',\r\n            }}\r\n        >\r\n            {\r\n                props.tiles.map(row => <MapRow tiles={row} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        tiles: state.map.tiles,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Map)\r\n\r\n\r\n","export const tiles = [\r\n    [0,0,6,40,6,6,20,5,6,6,6,6,5,30,6,5,30,6,6,6],\r\n    [6,0,5,0,0,0,0,0,0,20,6,0,0,10,0,0,20,5,5,6],\r\n    [5,0,0,0,5,6,0,40,5,0,0,0,0,7,0,0,0,0,5,6],\r\n    [5,0,0,6,0,0,0,0,5,40,0,0,0,0,30,0,0,0,6,6],\r\n    [6,6,0,6,6,6,0,6,0,0,0,0,0,0,0,0,0,0,6,6],\r\n    [6,7,0,0,0,0,0,0,6,0,0,5,0,20,0,6,6,6,6,6],\r\n    [6,0,0,0,7,0,5,0,6,0,0,0,0,0,0,6,6,6,6,5],\r\n    [6,0,0,5,0,0,5,5,6,0,5,0,0,0,6,6,0,50,4,6],\r\n    [6,0,0,5,6,0,0,0,0,0,5,0,0,0,1,1,0,0,0,6],\r\n    [6,0,0,5,6,0,0,0,0,0,5,0,0,0,6,6,6,1,6,6],\r\n    [6,0,5,5,7,0,0,0,0,10,5,0,0,0,5,6,1,1,6,6],\r\n    [5,5,5,5,5,5,5,5,5,5,6,5,5,6,6,6,0,6,5,5],\r\n]\r\n\r\n\r\n","import React from 'react'\r\nimport Player from '../player'\r\nimport Map from '../map'\r\n\r\nimport { tiles } from '../../data/map/1'\r\nimport store from '../../config/store'\r\n\r\n\r\nfunction World(props) {\r\n    store.dispatch({ type: 'ADD_TILES', payload: {\r\n        tiles,\r\n    }})\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                position: 'relative',\r\n                width: '800px',\r\n                height: '480px',\r\n                margin: '24px auto',\r\n            }}\r\n        >\r\n            <Map  />\r\n            <Player />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default World","import React, { Component } from 'react'\nimport World from './features/world'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <World />\n      </div>\n\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './config/store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'))\n\n\n"],"sourceRoot":""}